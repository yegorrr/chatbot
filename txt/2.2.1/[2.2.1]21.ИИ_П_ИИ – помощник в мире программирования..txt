тема: ИИ – помощник в мире программирования.

Иван играет за компьютером.

Нейросеточка появляется на экране.
Иван: я уже многое знаю про нейросети, интересно, а как они вообще создаются?

Нейросеточка: Нейросети создаются с использованием различных языков программирования, таких как Python, C++, Java, JavaScript и других. Выбор языка зависит от конкретных задач и требований проекта. Например, Для разработки мобильных приложений с использованием нейросетей может быть выбран Java или Kotlin. А для веб-приложений — JavaScript.

Для создания и обучения моделей часто используется Python, так как он имеет библиотеки для машинного обучения.

Иван: Python - это питон что ли? А причем тут змеи?

Нейросеточка: Это не змея, а язык программирования.

Рассказчик: Python - язык программирования,разработанный в 1990-х годах.Один из самых популярных языков программирования благодаря своей простоте, универсальности и большому количеству библиотек..
Используется для разработки веб-приложений, анализа данных, машинного обучения, научных вычислений и других задач.
Вот некоторые особенности языка Python:
Простота: Python имеет простой и интуитивно понятный синтаксис.
Универсальность: Python можно использовать для решения широкого спектра задач, от простых скриптов до сложных приложений.
Большое количество библиотек: Python имеет огромное количество готовых библиотек и модулей.
Интерпретируемость: Python является интерпретируемым языком, то есть программа выполняется построчно.

Существует множество сервисов, приложений и игр на основе Python, например Яндекс.Браузер, Яндекс Музыка, некоторые функции мессенджера Telegram и многое другое.

Иван: Я тоже хочу научиться создавать программы и разрабатывать свои приложения. С чего мне начать?

Нейросеточка: Тебе нужно изучить синтаксис Python. Это основа языка, которая включает в себя правила написания кода, ключевые слова, операторы и другие элементы.
Существует множество онлайн-курсов и ресурсов, где ты можешь изучить основы Python, но еще ты можешь попросить ЯндексGPT помочь тебе в изучении языка.

Иван: Промпт: Составь план изучения языка Python.
Результат:
Основы Python:
Установка Python и среды разработки (IDE).
Типы данных, переменные, операторы.
Условные операторы и циклы.
Функции и модули.
Иван: Отлично! Приступим?
Нейросеточка: Для начала тебе нужно установить Python и Visual Studio Code на компьютер. Раньше ты использовал его для создания масок, но теперь ты познакомишься с ним как с полноценным инструментом для программирования.
Рассказчик: Ознакомьтесь с инструкцией по установке в дополнительных материалах по установке.
Иван: Уже не терпится начать.
Промпт: Расскажи про типы данных, переменные, операторы в Python
Рассказчик: Результат:
Тип данных — это характеристика информации, которая говорит о том, какого рода данные хранятся в переменной. В Python существует несколько основных типов данных:
Числа: целые и вещественные числа (например, 42, -27.3).
Строки: последовательности символов, заключённые в кавычки (например, «Hello, World!»).
Списки: упорядоченные коллекции элементов, разделенных запятыми, заключенные в квадратные скобки ([1, 2, 3]).
и др.
Переменная в Python — это область памяти, которой присвоено определённое имя. В этой области может храниться информация (данные) различного типа: число, строка и т. д. Позволяют хранить данные в программе для дальнейшего использования.
Операторы — это символы, которые выполняют операции над значениями. В Python есть арифметические операторы (+, -, *, /), логические операторы (and, or, not), операторы сравнения (==, !=, >, <, >=, <=) и другие.
Иван: попробую узнать, как написать свою программу с помощью ЯндексGPT.
Промпт: напиши простую программу по теме «Типы данных, переменные, операторы».
Результат:
Конечно, вот пример простой программы на Python по теме «Типы данных, переменные, операторы»:
Этот код программы не озвучиваем, только выводим на экран.
# Объявляем две переменные с разными типами данных
x = 5 # переменная x имеет тип int (целое число)
y = 7,2# переменная x имеет тип float(вещественное число)

a = "Hello" # переменная y имеет тип str (строка)

# Выводим значения переменных
print(x) # выведет 5
print(a) # выведет Hello

# Выполняем арифметические операции с переменными
print (x + y) # сложение
print (x - y) # вычитание
print (a * 2) # умножение
Иван: что значит знак решетка в коде выше?

Нейросеточка: Строка после символа # не будет выполнена, она называется комментарий и предназначена только для того, чтобы разработчику было удобнее воспринимать программу.

Иван: про переменные и операторы я понял. Теперь хочу узнать про условные операторы.
Дизайнеру: Тут нужно будет показать опять план
Результат:
Основы Python:
Установка Python и среды разработки (IDE).
Типы данных, переменные, операторы.
Условные операторы и циклы.
Функции и модули.
Иван: Что это такое?

Нейросеточка:
Условный оператор - это часть кода, которая позволяет программе принимать решения в зависимости от определенных условий.

Рассказчик: Условие состоит из логического выражения, которое может быть истинным или ложным.
Если логическое выражение истинно, то выполняется блок кода после условия. Если ложно — программа переходит к другим командам или не делает ничего.

Для создания условий используются ключевые слова if, elif и else.
Ключевое слово if используется для проверки одного условия,
elif — для проверки дополнительных условий,
а else — для выполнения кода,
если ни одно из предыдущих условий не было истинным.

Иван: Промпт: напиши простую программу на python c переменными и условием

Нейросеточка: Конечно, вот пример простой программы на Python с использованием переменных и условий:
Саму программу не озвучиваем, только на экране она.

age = int(input("Введите ваш возраст: "))
if age >= 18:
print("Вы совершеннолетний")
else:
print("Вам нужно подождать ещё немного")
Эта программа запрашивает у пользователя его возраст и выводит соответствующее сообщение в зависимости от того, является ли пользователь совершеннолетним или нет.

Иван: Круто! Что у нас еще по плану?

Дизайнеру: Тут нужно будет показать опять план
Результат:
Основы Python:
Установка Python и среды разработки (IDE).
Типы данных, переменные, операторы.
Условные операторы и циклы.
Функции и модули.
Иван: А что такое циклы?
Промпт: Что такое циклы в Python, приведи примеры программ на циклы
Рассказчик: Циклы в Python — это конструкции, которые позволяют повторять выполнение определённых команд заданное количество раз или до тех пор, пока выполняется определённое условие.
Дизайнеру: Текст ниже до звездочек напрашивается уже не в яндексе выводить, а как объяснение материала. А код программ показывать в окне консоли, как в КБ мы делали, с выводом результата на экран снизу. Думаю, что так нагляднее будет.
В Python есть два основных типа циклов: for и while.
Цикл for используется для перебора элементов последовательности (списка, кортежа, строки и т. д.). Он позволяет выполнить блок кода для каждого элемента последовательности. Пример программы на цикл for:
текст программы и результат не озвучиваем.
fruits = ["яблоко", "груша", "банан"]
for x in fruits:
print(x)
Результат:
яблоко
груша
банан
Эта программа выведет на экран названия всех фруктов из списка fruits.
Цикл while используется, когда нужно выполнять блок кода до тех пор, пока определенное условие остается истинным. Пример программы на цикл while:
текст программы и результат не озвучиваем.
count = 0
while count < 5:
count += 1
print("Счётчик равен", count)
Результат:
Счётчик равен 1
Счётчик равен 2
Счётчик равен 3
Счётчик равен 4
Счётчик равен 5

Эта программа будет выводить на экран сообщение «Счётчик равен» и текущее значение счётчика до тех пор, пока счётчик не станет больше или равен 5.
********************************
Нейросеточка: Иван, на сегодня достаточно теории, давай попросим ЯндексGPT написать программу по уже существующему условию. У меня есть несколько задач для тебя:
Иван: Давай.
Нейросеточка:
Задача. Напиши программу, которая предоставляет скидку 10%, если количество товаров в корзине больше 5.
Промпт ( не озвучиваем, только на экране показываем): Напиши программу, которая предоставляет скидку 10%, если количество товаров в корзине больше 5.
Результат:
quantity = int(input("Введите количество товаров в корзине: "))
if quantity > 5:
discount = 0.1 # Скидка 10%
total_price = 1000 # Общая стоимость товаров
discounted_price = total_price - total_price * discount # Посчитаем с учетом скидки
print("Вам предоставляется скидка 10%. Итоговая стоимость: ‘, discounted_price")
else:
print("Скидка не предоставляется")
Иван: Непонятный код.
Нейросеточка: Иван, попроси искусственный интеллект объяснить построчно, что происходит в программе.
Иван: Промпт: Объясни построчно, что происходит в программе:
quantity = int(input("Введите количество товаров в корзине: "))
if quantity > 5:
discount = 0.1 # Скидка 10%
total_price = 1000 # Общая стоимость товаров
discounted_price = total_price - total_price * discount # Посчитаем с учетом скидки
print("Вам предоставляется скидка 10%. Итоговая стоимость: ‘,discounted_price")
else:
print("Скидка не предоставляется")

Иван: результат:
1. Пользователю предлагается ввести количество товаров в корзине.
2. Программа считывает введенное пользователем количество товаров.
3. Если количество товаров больше 5:
3.1 Присваивается переменной discount значение 0.1, что соответствует скидке в 10%.
3.2 Присваивается переменной total_price значение 1000.
3.3 Вычисляется discounted_price, как разница между total_price и total_price, умноженным на discount.
3.4 На экран выводится сообщение с текстом "Вам предоставляется скидка 10%. Итоговая стоимость:" и значением discounted_price.
4. В противном случае (если количество товаров меньше или равно 5) программа выводит сообщение "Скидка не предоставляется".

Иван:Мне все понятно! Теперь я знаю, что нейросеть может мне объяснить теорию по программированию и помочь в написании программ.

Рассказчик: Сегодня на занятии вы:
Узнали, что сервисы искусственного интеллекта создаются с помощью языков программирования.
Познакомились с переменными, операторами, условиями и циклами в Python.
Научились создавать промпты, для получения ответов на теоретические вопросы по программированию.
Научились составлять простые программы с помощью искусственного интеллекта.
Научились использовать искусственный интеллект для построчного объяснения программы.

Нейросеточка: На следующем занятии мы научимся определять ошибки в программе и исправлять их с помощью искусственного интеллекта. До встречи!