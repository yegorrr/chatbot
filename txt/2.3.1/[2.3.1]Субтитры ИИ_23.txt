Субтитры ИИ_23 «Обработка изображений в OpenCV-Python»

Иван, сегодня мы познакомимся с одной из самых популярных библиотек для компьютерного зрения — OpenCV.

Она широко применяется в робототехнике, медицинских и научных исследованиях, автомобильной индустрии и многом другом.

А новые версии также поддерживают работу и с видео, позволяя отслеживать движения и элементы.

Для установки OpenCV необходимо иметь актуальную версию Python, а затем в зависимости от вашей операционной системы выполнить одну из команд  в командной строке. Инструкцию по установке вы найдете в материалах к занятию.

Давай начнем знакомство с библиотекой OpenCV с самых простых методов.

Так как мы будем работать с изображениями, то для начала попробуем вывести картинку в отдельном окне.
В качестве примера будем использовать твое фото капибары.

Положим его в одну папку с нашим кодом.

Теперь напишем код в Visual Studio Code:

Код мы написали, но я ничего не понял.  Наверно стоит обратиться за объяснениями к ЯндексGPT.

На экране построчно написано, что происходит в программе, которая использует библиотеку OpenCV (cv2) для загрузки изображения "kapibara.jpg" и отображения его в окне с названием "image" с помощью предложенных функций. Далее она ждет, пока пользователь не нажмет любую клавишу (0 указывает на бесконечное ожидание), после чего программа закрывает открытое окно с изображением.

Теперь понятно.

Запускаем программу.

Помнишь, мы перекрашивали черно-белые фото?

Теперь мы можем сделать обратное действие: сделать цветное фото черно-белым.

Для этого нужно после названия файла поставить запятую и добавить cv IMREAD_GRAYSCALE, что переведет наше изображение в черно-белые цвета.

А если я хочу картинку не на весь экран, а поменьше? Это как-то можно сделать?

Конечно.

Для этого после четвертой строки добавим функцию cv.resize

и укажем размеры по оси x и y.

То что надо!

Иногда нужно анализировать не все изображение, а только его часть — например, где находится яблоко на дереве.

Чтобы сосредоточиться на нужных деталях, ненужные части изображения просто отрезают.

Цифровые изображения состоят из множества пикселей.

Пиксели образуют строки и столбцы.

Количество строк – это высота изображения, а количество столбцов — ширина.

У каждого пикселя есть свое место (координата X и Y).

Верхний левый угол таблицы будет началом координат, а нижний правый — будет обозначать ширину и высоту картинки.

Чтобы вырезать часть изображения, нужно выбрать две строки, между которыми находится объект,

а затем два столбца.

Например, нужно вырезать фрагмент с апельсинами на голове у Капибары.

Для этого необходимо указать соответствующие их расположению, а именно: от 10 до 150 строки и от столбца с координатой 600 до столбца с координатой 750.

Давай напишем программу, часть которой ты уже умеешь писать.

Я знаю, что в первых двух строках программа считывает данные исходного изображения из файла kapibara.jpg в переменную kapibara с помощью функции imread().
А дальше?

Затем программа вырезает фрагмент исходного изображения, используя выделение области.

Далее изображение kapibara отображается в окне с названием "image".

Затем программа отображает данные обеих переменных с помощью функций imshow().

В результате в двух разных окнах появляется исходное изображение  и его фрагмент.

А последняя строка нужна для того, чтобы программа не закрывалась сразу после демонстрации изображения?
Правильно!

Но и это еще не все, ты можешь не только вырезать этот фрагмент, но и сохранить его как отдельное изображение.

Для этого добавь еще одну строку в код.
После внесения изменений программа будет сохранять фрагмент изображения  с новым именем "new_fragment.jpg".

Только не забудь при запуске программы нажать на любую клавишу, чтобы программа закончила свое выполнение и сохранила картинку.

Классно! У меня получается, спасибо!

На следующем занятии мы узнаем больше об Open CV. А на сегодня все!

До встречи на следующем занятии!